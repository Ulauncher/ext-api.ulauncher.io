version: 0.2

env:
  variables:
    IMAGE_NAME: ulauncher/ext-api
    DOCKER_CERT_PATH: "/tmp/docker-cert"
  parameter-store:
    CA: "/home.gornostal.name/docker/ca"
    CLIENT_CERT: "/home.gornostal.name/docker/client-cert"
    CLIENT_KEY: "/home.gornostal.name/docker/client-key"

phases:
  pre_build:
    commands:
      - export SOURCE_VERSION=$(git rev-parse HEAD)
      - export GIT_REF="$(git show-ref | grep "$SOURCE_VERSION" | grep -iv head | sort | tail -n 1)"
      # GIT_REF_TYPE can be either "origin" (for branches) or "tags"
      - export GIT_REF_TYPE="$(echo "$GIT_REF" | awk -F "/" '{print $(NF-1)}')"
      # GIT_REF_NAME is either a branch or tag name
      - export GIT_REF_NAME="$(echo "$GIT_REF" | awk -F "/" '{print $NF}')"
  build:
    commands:
      # Set env STOP=true to stop container
      # Set env RESTART=true to restart container without pulling new image
      - |
        if [ "$GIT_REF_TYPE" = "origin" ] && echo "master dev" | grep -q "$GIT_REF_NAME"; then
          export IMAGE_FULL_NAME=$IMAGE_NAME:$GIT_REF_NAME
          aws s3api get-object --bucket ext-api.config --key "$GIT_REF_NAME.env" .env
          ENV_NAME=dev
          if [ "$GIT_REF_NAME" = "master" ]; then
            ENV_NAME=prod
          fi

          echo "Deploying..."
          mkdir $DOCKER_CERT_PATH
          echo "$CA" > $DOCKER_CERT_PATH/ca.pem
          echo "$CLIENT_CERT" > $DOCKER_CERT_PATH/cert.pem
          echo "$CLIENT_KEY" > $DOCKER_CERT_PATH/key.pem

          echo "10.0.0.13 home.gornostal.name" >> /etc/hosts
          export DOCKER_TLS_VERIFY="1"
          export DOCKER_HOST="tcp://home.gornostal.name:2376"
          export DOCKER_MACHINE_NAME="home"

          if [ -z "$STOP" ] && [ -z "$RESTART" ]; then
            echo "Pulling images..."
            docker-compose --no-ansi -f docker-compose.yml pull
          fi
          echo "Stopping server..."
          docker-compose --no-ansi -f docker-compose.yml down --remove-orphans
          if [ "$STOP" != "true" ]; then
            echo "Starting server..."
            docker-compose --no-ansi -f docker-compose.yml up -d
          fi

          rm -rf $DOCKER_CERT_PATH
        fi
